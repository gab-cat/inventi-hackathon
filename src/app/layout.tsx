import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { ClerkProvider } from '@clerk/nextjs';
import ConvexClientProvider from '@/providers/auth.provider';
import { ThemeProvider } from '../providers/theme.provider';
import { LoadingProgressProvider } from '@/providers/bprogress.provider';
import { Toaster } from 'sonner';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider
      signInUrl={`/sign-in`}
      signUpUrl={`/sign-up`}
      signInFallbackRedirectUrl={`/dashboard`}
      signUpFallbackRedirectUrl={`/dashboard`}
      signUpForceRedirectUrl={`/dashboard`}
      signInForceRedirectUrl={`/dashboard`}
      afterSignOutUrl={`/sign-in`}
    >
      <ConvexClientProvider>
        <html lang='en' suppressHydrationWarning>
          <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
            <ThemeProvider attribute='class' defaultTheme='dark' enableSystem>
              <LoadingProgressProvider>
                {children}
                <Toaster position='top-right' richColors />
              </LoadingProgressProvider>
            </ThemeProvider>
          </body>
        </html>
      </ConvexClientProvider>
    </ClerkProvider>
  );
}
